import Head from 'next/head';
import Image from 'next/image';
import {
  Box,
  Card,
  CardContent,
  CardMedia,
  Container,
  Divider,
  Grid,
  List,
  ListItem,
  ListItemButton,
  ListItemText,
  Typography,
} from '@mui/material';
import { cyan, green } from '@mui/material/colors';
import { Character, Episode } from '@/interfaces';
import {
  getAllCharacters,
  getCharactersForEpisode,
  getEntireEpisodeList,
  getEpisodeById,
} from '@/lib/api';
import Link from 'next/link';
import { useEffect, useState } from 'react';

export default function Home({
  characters,
  allEpisodes,
}: {
  characters: Character[];
  allEpisodes: Episode[];
}) {
  const [displayedCharacters, setDisplayedCharacters] = useState(characters);
  const [selectedEp, setSelectedEp] = useState<number | null>(null);

  const displayCharactersForSelectedEpisode = async (episodeId: number) => {
    const episodeCharacterUrls: string[] = await getCharactersForEpisode(
      episodeId,
    );
    let epChars: Character[] = [];
    const characterRequests = episodeCharacterUrls.map((url) => fetch(url));
    const characterResponses = await Promise.all(characterRequests);
    epChars = await Promise.all(
      characterResponses.map(async (response) => {
        const data: Character = await response.json();
        return data;
      }),
    );
    setDisplayedCharacters(epChars);
  };

  const handleOnEpisodeClicked = async (e: React.MouseEvent<HTMLLIElement>) => {
    const episodeId = Number(e.currentTarget.dataset.episodeId);

    if (selectedEp !== episodeId) {
      console.log('clicked new');
      setSelectedEp(episodeId);
    } else {
      console.log('clicked same');
      setSelectedEp(null);
      setDisplayedCharacters(characters);
    }
  };

  useEffect(() => {
    if (selectedEp) {
      displayCharactersForSelectedEpisode(selectedEp);
    }
  }, [selectedEp]);

  return (
    <>
      <Head>
        <title>Rick & Morty Image Gallery</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box overflow="hidden" bgcolor="primary.dark" minHeight="100vh">
        <Container>
          <Typography
            color="secondary"
            mb="1rem"
            textAlign="center"
            variant="h3"
          >
            Rick & Morty Characters
          </Typography>
        </Container>
        <Grid container spacing={2}>
          <Grid item xs={4} md={2} padding={1}>
            <List
              sx={{
                color: cyan[300],
                padding: '0 4px',
                maxHeight: '100vh',
                overflowY: 'scroll',
              }}
            >
              <ListItem>
                <ListItemText>Episodes</ListItemText>
              </ListItem>
              <Divider
                sx={{
                  borderColor: cyan[300],
                }}
              />
              {allEpisodes.map((episode) => (
                <ListItem
                  key={episode.id}
                  sx={{
                    margin: '5px 0',
                  }}
                  disablePadding
                  data-episode-id={episode.id}
                  onClick={handleOnEpisodeClicked}
                >
                  <ListItemButton
                    selected={episode.id === selectedEp}
                    sx={{
                      border: `1px solid ${cyan[800]}`,
                      borderRadius: 2,
                      '&.Mui-selected': {
                        border: `3px solid ${cyan[500]}`,
                        borderRadius: 2,
                      },
                    }}
                  >
                    <ListItemText primary={episode.name} />
                  </ListItemButton>
                </ListItem>
              ))}
            </List>
          </Grid>
          <Grid item xs={8} md={10}>
            <Grid container columns={10} spacing={2} justifyContent="center">
              {displayedCharacters.map((character) => (
                <Grid item xs={10} sm={5} md={3} lg={2} key={character.id}>
                  <Card sx={{ borderRadius: 5 }}>
                    <CardMedia>
                      <Image
                        src={character.image}
                        alt={character.name}
                        width={0}
                        height={0}
                        sizes="100vw"
                        style={{ width: '100%', height: 'auto' }}
                      />
                    </CardMedia>
                    <CardContent
                      sx={{
                        bgcolor: green[900],
                      }}
                    >
                      <Typography
                        variant="body2"
                        color={cyan[300]}
                        textAlign="center"
                        fontSize={24}
                        fontWeight="bold"
                      >
                        {character.name}
                      </Typography>
                    </CardContent>
                  </Card>
                </Grid>
              ))}
              <Grid item xs={12}></Grid>
            </Grid>
          </Grid>
        </Grid>
      </Box>
    </>
  );
}

export async function getServerSideProps() {
  const characters = await getAllCharacters();
  const allEpisodes = await getEntireEpisodeList();

  return {
    props: {
      characters,
      allEpisodes,
    },
  };
}
